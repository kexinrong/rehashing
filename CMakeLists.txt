cmake_minimum_required(VERSION 3.5)
project(hbe)

set(CMAKE_CXX_STANDARD 14)
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -march=native -fpic")

include_directories(utils)
include_directories(lib/config4cpp/include)
add_subdirectory(alg)
add_subdirectory(data)
link_directories(lib/config4cpp/lib)

#add_executable(hbe experiments/SyntheticFindHBE.cpp)
#add_executable(hbe experiments/SyntheticFindRandom.cpp)
#add_executable(hbe experiments/SyntheticFixAcc.cpp)
#add_executable(hbe experiments/DistributionSample.cpp)
#add_executable(hbe experiments/BucketSweep.cpp)
#add_executable(hbe experiments/SyntheticDataGen.cpp)
#add_executable(hbe experiments/CacheMissTest.cpp)
#add_executable(hbe experiments/BatchBenchmark.cpp)
#add_executable(hbe experiments/Diagnosis.cpp)
add_executable(hbe experiments/AdaptiveBenchmark.cpp)
#add_executable(hbe experiments/TimeBenchmark.cpp)
#add_executable(hbe experiments/ComputeExact.cpp)
#add_executable(hbe experiments/RealDataAll.cpp )
#add_executable(hbe experiments/RealDataAdaptive.cpp)
target_link_libraries(hbe alg data config4cpp)
